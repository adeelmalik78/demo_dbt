###
### Liquibase version: 4.30.0+
###
### Liquibase sales: https://www.liquibase.com/contact-us
### Liquibase support: https://support.liquibase.com
###

###
### Flow documentation: https://docs.liquibase.com/commands/flow/flow.html
###

###
### Global variables used in the flowfile
###
globalVariables:
  LB_BASE_DIR: "${LB_BASE_DIR:-.}"
  LB_ENVIRONMENT: "${LB_ENVIRONMENT:-PROD}"
  LB_LABELS: "${LB_LABELS:-null}"
  LB_TEST_CHECKS: "${LB_TEST_CHECKS:-T}"
  LB_UPDATE_PROD: "${LB_UPDATE_PROD:-F}"


  SNAPSHOT_FILE: "snapshots/Snapshot_${LB_ENVIRONMENT}.json"

  # DBT_BUILD: "${DBT_BUILD:-F}"
  # DBT_MODELS: "${DBT_MODELS:-customer_order_summary orders_view}"
  # DBT_PROFILE_DEV: "${DBT_PROFILE:-liquibase_dev}"
  # DBT_PROFILE_PROD: "${DBT_PROFILE:-liquibase_prod}"
  # DBT_PROJECT_DIR: "${DBT_PROJECT_DIR:-/Users/adeelmalik/Desktop/LiquibaseHub/DBT}"

  DBT_URL_PROD: "jdbc:snowflake://ba89345.us-east-2.aws.snowflakecomputing.com/?warehouse=CUSTOMERSUCCESS_WH&db=AMDB&schema=DBT&user=adeelmalik"
  DBT_OFFLINE_URL: "offline:snowflake?snapshot=${SNAPSHOT_FILE}"

  CHECKS_REPORT: "reports/Checks_${LB_ENVIRONMENT}.html"
  UPDATE_REPORT: "reports/Update_${LB_ENVIRONMENT}.html"
  DRIFT_REPORT: "reports/Drift_${LB_ENVIRONMENT}.html"
  DIFF_JSON_FILE: "reports/diff_${LB_ENVIRONMENT}.json"

  LIQUIBASE_COMMAND_URL: "${DBT_URL_PROD}"
  LIQUIBASE_COMMAND_CHANGELOG_FILE: "Changelogs/changelog.dbt.xml"
  LIQUIBASE_LIQUIBASE_CATALOG_NAME: "AMDB"
  LIQUIBASE_LIQUIBASE_SCHEMA_NAME: "DBT"


###
### Stages to execute
###
stages:
  PreDeploy:
    actions:
      #
      # Validate database connection
      # https://docs.liquibase.com/commands/change-tracking/connect.html
      #
      - type: liquibase
        command: connect

      #
      # Validate changelog
      # https://docs.liquibase.com/commands/utility/validate.html
      #
      - type: liquibase
        command: validate
        cmdArgs: { contexts: "PROD" }

      # View pending changes
      # https://docs.liquibase.com/commands/change-tracking/status.html
      #
      - type: liquibase
        command: status
        cmdArgs: { label-filter: "${LB_LABELS}",
                    contexts: "PROD"
                 }

      # Control action to detect if there are any pending changes
      # https://docs.liquibase.com/liquibase-pro/flow/flow-actions.html
      # 
      - type: control
        if: "status.changesetCount == 0"
        command: exit
        cmdArgs: { exitCode: "0", exitMessage: "Database is current!" }

  PolicyChecks:
    actions:
      #
      # Show policy checks
      # https://docs.liquibase.com/liquibase-pro/policy-checks/home.html
      #
      - type: liquibase
        if: "${LB_TEST_CHECKS} == T"
        command: checks show
        cmdArgs: { check-status: "enabled" }
      #
      # Run policy checks
      # https://docs.liquibase.com/liquibase-pro/policy-checks/home.html
      #
      - type: liquibase
        if: "${LB_TEST_CHECKS} == T"
        command: checks run
        cmdArgs: { report-enabled: "true", 
                      report-path: "${LB_BASE_DIR}", 
                      report-name: "${CHECKS_REPORT}", 
                      checks-output: "issues", 
                      checks-scope: "changelog, database", 
                      changeset-filter: "pending", 
                      auto-update: "on" 
                  }
        globalArgs: { reports-open: "false" }

  Snapshot:
    actions:
      #
      # Create updated snapshot
      # https://docs.liquibase.com/commands/inspection/snapshot.html
      #
      - type: liquibase
        command: snapshot
        cmdArgs: { schemas: "DBT", 
                    catalogs: "AMDB",
                    snapshotFormat: "json" 
                  }
        globalArgs: { outputfile: "${SNAPSHOT_FILE}" }

  Update_PROD_DB:
    actions:
      #
      # Update database
      # https://docs.liquibase.com/commands/update/update-sql.html
      #
      - type: liquibase
        command: update-sql
        cmdArgs: { contexts: "PROD",
                      label-filter: "${LB_LABELS}", 
                      report-enabled: "true", 
                      report-path: "${LB_BASE_DIR}", 
                      report-name: "${UPDATE_REPORT}" }
        globalArgs: { reports-open: "false" }

      #
      # Update database
      # https://docs.liquibase.com/commands/update/update.html
      #
      - type: liquibase
        if: "${LB_UPDATE_PROD} == T"
        command: update
        cmdArgs: { contexts: "PROD",
                      label-filter: "${LB_LABELS}", 
                      report-enabled: "true", 
                      report-path: "${LB_BASE_DIR}", 
                      report-name: "${UPDATE_REPORT}" }
        globalArgs: { reports-open: "true" }

  Report_New_Changes:
    actions:
      - type: liquibase
        command: diff
        cmdArgs: { referenceUrl: "${DBT_URL_PROD}",
                      url: "${DBT_OFFLINE_URL}",
                      include-catalog="true",
                      include-schema="true",
                      format: json,
                      reports-enabled: "true",
                      reports-path: "${LB_BASE_DIR}",
                      reports-name: "${DRIFT_REPORT}"
                      # drift-severity: 1,
                      # drift-severity-missing: 2,
                      # drift-severity-unexpected: 3,
                      # drift-severity-changed: 4
                  }
        globalArgs: { outputFile: "${DIFF_JSON_FILE}", 
                        mirror-console-messages-to-log: "true"
                    }

###
### Always execute
###
endStage:
  actions:
    #
    # Show deployed changes
    # https://docs.liquibase.com/commands/change-tracking/history.html
    #
    - type: liquibase
      command: history
